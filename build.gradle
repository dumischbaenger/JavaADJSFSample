plugins {
  id "org.gretty" version "2.2.0"
  //id "org.akhikhl.gretty" version "2.0.0"
  id "java"
  id "groovy"
  id "eclipse" 
  id "war"
}


repositories { 
  jcenter()
}


dependencies {
  compile 'com.sun.faces:jsf-api:2.2.5'
  compile 'com.sun.faces:jsf-impl:2.2.5'
  compile 'org.codehaus.groovy:groovy-all:2.4.13'
  compile "org.slf4j:slf4j-simple:1.7.25"
  compile 'org.primefaces:primefaces:4.0'

  //BD fuer JAVA 10 - Java 10 SE hat manche API nicht mehr  
  compile 'javax.xml.bind:jaxb-api:2.2.11'
  compile 'com.sun.xml.bind:jaxb-core:2.2.11'
  compile 'com.sun.xml.bind:jaxb-impl:2.2.11'
  compile 'javax.activation:activation:1.1.1'
  compile 'javax.annotation:javax.annotation-api:1.3.2'
}

task sync(type: Sync) {
    from "$sourceSets.main.java.outputDir"
    from "$sourceSets.main.groovy.outputDir"
    into "${project.buildDir}/inplaceWebapp/WEB-INF/classes"
}

project.afterEvaluate {
    appRun.dependsOn sync
}

def jettyDir="/opt/jetty"

task jr (type: Exec) {
  group "BET"
  description "build project and start jetty"
  dependsOn war
  def script=""" 
    cp "${project.buildDir}/libs/JavaADJSFSample.war" "${jettyDir}/webapps"
    cd "$jettyDir"
    
"""
  executable "bash"
  workingDir=new File(jettyDir)
  args "-x", "-c", script
}

gretty {
  
  //BD App erreichbar unter
  // http://localhost:8080/JavaADJSFSample/faces/index.xhtml#
  
  //httpPort = 8081
  //contextPath = '/MyWebApp'
//  loggingLevel="TRACE"
  // normaler weise erzeugt gretty ein Verzeichnis .../build/inplaceWebapp,
  // leider werden in dieses Verzeichnis die Class Dateien nicht kopiert
  // und sind deshalb fuer jetty nicht sichtbar
  //inplaceMode="hard"

//  //variant hard mode
//  inplaceMode="hard"
//  classPath myOutputClassPath.absolutePath
//  classPath project.webAppDir
//  println "classpath: " + classPath

  //variant soft mode
  inplaceMode="soft"
//  classPath myOutputClassPath.absolutePath
  println "classpath: " + classPath
  
  realm 'TestRealm'
  realmConfigFile 'jetty-realm.properties'

}


println "buildDir: ${project.buildDir}"
//println "classpath: \n ${sourceSets.main.runtimeClasspath.join("\n  ")}"
//sourceSets.main.runtimeClasspath.each { println it }
//println "classPath: $classPath"
println  "webAppDir: " + project.webAppDir

